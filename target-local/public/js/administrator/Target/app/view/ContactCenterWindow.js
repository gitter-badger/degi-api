/*
 * File: app/view/ContactCenterWindow.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Target.view.ContactCenterWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.contactcenterwindow',

    requires: [
        'Target.view.ReportWindowViewModel1',
        'Ext.form.field.Hidden',
        'Ext.form.Panel',
        'Ext.form.field.Display',
        'Ext.form.field.TextArea',
        'Ext.Img',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'contactcenterwindow'
    },
    id: 'contactcenterWindow',
    title: 'My Window',
    modal: true,
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch',
        padding: '10 10 10 10'
    },
    items: [
        {
            xtype: 'hiddenfield',
            id: 'cc_id',
            fieldLabel: 'Label'
        },
        {
            xtype: 'container',
            flex: 1,
            id: 'mainContainter',
            layout: {
                type: 'hbox',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'form',
                    flex: 1,
                    id: 'contactcenterForm',
                    bodyPadding: 10,
                    title: '',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'displayfield',
                            flex: 1,
                            fieldLabel: '主旨',
                            name: 'cc_subject'
                        },
                        {
                            xtype: 'textareafield',
                            flex: 1,
                            height: 200,
                            fieldLabel: '內容',
                            name: 'cc_content',
                            editable: false
                        },
                        {
                            xtype: 'hiddenfield',
                            flex: 1,
                            id: 'cc_status',
                            fieldLabel: '處理狀況',
                            name: 'cc_status'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    id: 'imgContainer',
                    margin: '43 0 0 0',
                    width: 200,
                    items: [
                        {
                            xtype: 'image',
                            height: 201,
                            id: 'cc_uploadpic',
                            width: 200,
                            listeners: {
                                render: 'onCc_uploadpicRender'
                            }
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'container',
            flex: 1,
            padding: '0 0 0 10',
            items: [
                {
                    xtype: 'textfield',
                    id: 'ccStatus1Value',
                    fieldLabel: 'status',
                    emptyText: 'open／close ...'
                },
                {
                    xtype: 'textareafield',
                    height: 90,
                    id: 'ccStatus2Value',
                    width: 400,
                    fieldLabel: 'note',
                    emptyText: '處理中／已結案 ...'
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            layout: {
                type: 'hbox',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'button',
                    text: '修改',
                    listeners: {
                        click: 'onButtonClick'
                    }
                }
            ]
        }
    ],
    listeners: {
        afterrender: 'onWindowAfterRender'
    },

    onCc_uploadpicRender: function(component, eOpts) {
        Ext.fly(this.el).on('dblclick', function(e, t){
            var img = Ext.getCmp('cc_uploadpic').getEl().dom.src;
            window.open(img);
        });

    },

    onButtonClick: function(button, e, eOpts) {
        var ccStatus = {};
        var ccKeyArray = [];
        var ccValueArray = [];

        var ccStatusNumber = 2; //如果加欄位就改這個值，兩欄就改2, 三欄就改3, 以此類推。

        for(var i=1; i<=ccStatusNumber; i++){
            var fieldName = Ext.getCmp('ccStatus'+i+'Value').fieldLabel;
            var fieldValue = Ext.getCmp('ccStatus'+i+'Value').getValue();

            ccKeyArray.push(fieldName);
            ccValueArray.push(fieldValue);
        }

        if( ccKeyArray.length === ccValueArray.length ){
            for(var aLen=0; aLen<ccKeyArray.length; aLen++){
                ccStatus[ccKeyArray[aLen]] = ccValueArray[aLen];
            }
        }

        // console.log('ccStatus: '+ccStatus);
        // console.log('ccStatus: '+Ext.JSON.encode(ccStatus));
        var ccStatusJson = Ext.JSON.encode(ccStatus);
        // console.log('ccStatusJson: '+ccStatusJson);

        var form = Ext.getCmp('contactcenterForm').getForm();

        if(form.isValid()){
            var ccId = Ext.getCmp('cc_id').getValue();
            form.findField('cc_status').setValue(ccStatusJson);
            form.submit({
                // params: Ext.util.JSON.encode(form.getValues()),
                method: 'PUT',
                waitTitle:'訊息',
                waitMsg:'修改資料中',
                url:'http://dev.finpo.com.tw/posh/public/b/contactcenter/'+ccId,

                success:function(form,action){

                    var store  = Ext.getCmp('contactcentergridpanel').getViewModel().getStore('ContactCenterStore');
                    store.proxy.url='http://dev.finpo.com.tw/posh/public/b/contactcenter';
                    store.load();

                    form.reset();
                    Ext.Msg.alert('訊息','回報資料修改成功', function(){
                        var window = Ext.getCmp('contactcenterWindow');
                        window.close();
                    });

                },
                failure:function(form,action){

                   Ext.Msg.alert('訊息','回報資料修改失敗');

                }

            });
        }
    },

    onWindowAfterRender: function(component, eOpts) {
        // var baseURL = 'http://dev.finpo.com.tw/posh/public/'; /* 本機用這個，上線前註解掉 */
        var baseURL = document.URL;

        var ccId = Ext.getCmp('cc_id').getValue();

        Ext.Ajax.request({
            url: 'http://dev.finpo.com.tw/posh/public/b/contactcenter/'+ccId,
            success: function(response, opts){
                var obj = Ext.decode(response.responseText);

                Ext.getCmp('contactcenterForm').getForm().setValues(obj.data);

                var ccStatus = Ext.getCmp('cc_status').getValue();
                var ccStatusObj = '';
                if(ccStatus !== ''){
                    ccStatusObj = Ext.JSON.decode(ccStatus);
                }

                /* 塞值給 img 元件 */
                if(obj.data.cc_uploadpic !== ''){
                    Ext.getCmp('cc_uploadpic').getEl().dom.src = baseURL+'../images/contact/'+obj.data.cc_uploadpic;
                }

                var len = 0;
                if(ccStatusObj !== ''){
                    for( var key in ccStatusObj ){
                        len++;
                        var objKey = key;
                        Ext.getCmp('ccStatus'+len+'Value').labelEl.update(key);
                        Ext.getCmp('ccStatus'+len+'Value').setValue(ccStatusObj[key]);
                    }
                }

            },
            failure: function(response, opts){
                console.log('server-side failure with status code ' + response.status);
            }
        });
    }

});